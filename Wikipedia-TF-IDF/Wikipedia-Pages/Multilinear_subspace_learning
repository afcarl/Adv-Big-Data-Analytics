Multilinear subspace learning (MSL) aims to learn a specific small part of a large space of multidimensional objects having a particular desired property. [1] [2] [3] [4] It is a dimensionality reduction approach for finding a low-dimensional representation with certain preferred characteristics of high-dimensional tensor data through direct mapping, without going through vectorization.[5][6] The term tensor in MSL refers to multidimensional arrays. Examples of tensor data include images (2D/3D), video sequences (3D/4D), and hyperspectral cubes (3D/4D). The mapping from a high-dimensional tensor space to a low-dimensional tensor space or vector space is named as multilinear projection.[5][7]

MSL methods are higher-order generalizations of linear subspace learning methods such as principal component analysis (PCA), linear discriminant analysis (LDA) and canonical correlation analysis (CCA). In the literature, MSL is also referred to as tensor subspace learning or tensor subspace analysis.[6] Research on MSL has progressed from heuristic exploration in 2000s (decade) to systematic investigation in 2010s.

With the advances in data acquisition and storage technology, big data (or massive data sets) are being generated on a daily basis in a wide range of emerging applications. Most of these big data are multidimensional. Moreover, they are usually very-high-dimensional, with a large amount of redundancy, and only occupying a part of the input space. Therefore, dimensionality reduction is frequently employed to map high-dimensional data to a low-dimensional space while retaining as much information as possible.

Linear subspace learning algorithms are traditional dimensionality reduction techniques that represent input data as vectors and solve for an optimal linear mapping to a lower-dimensional space. Unfortunately, they often become inadequate when dealing with massive multidimensional data. They result in very-high-dimensional vectors, lead to the estimation of a large number of parameters, and also break the natural structure and correlation in the original data.[5][6][8]

MSL is closely related to tensor decompositions.[10] They both employ multilinear algebra tools. The difference is that tensor decomposition focuses on factor analysis, while MSL focuses on dimensionality reduction. MSL belongs to tensor-based computation[11] and it can be seen as a tensor-level computational thinking of machine learning.

A multilinear subspace is defined through a multilinear projection that maps the (high-dimensional) input tensor space to a (lower-dimensional) vector/tensor space (the subspace). The original idea is due to Hitchcock in 1927.[12]

A TTP is a direct projection of a high-dimensional tensor to a low-dimensional tensor of the same order, using N projection matrices for an Nth-order tensor. It can be performed in N steps with each step performing a tensor-matrix multiplication (product). The N steps are exchangeable.[13] This projection is an extension of the higher-order singular value decomposition[13] (HOSVD) to subspace learning.[8] Hence, its origin is traced back to the Tucker decomposition[14] in 1960s.

A TVP is a direct projection of a high-dimensional tensor to a low-dimensional vector, which is also referred to as the rank-one projections. As TVP projects a tensor to a vector, it can be viewed as multiple projections from a tensor to a scalar. Thus, the TVP of a tensor to a P-dimensional vector consists of P projections from the tensor to a scalar. The projection from a tensor to a scalar is an elementary multilinear projection (EMP). In EMP, a tensor is projected to a point through N unit projection vectors. It is the projection of a tensor on a single line (resulting a scalar), with one projection vector in each mode. Thus, the TVP of a tensor object to a vector in a P-dimensional vector space consists of P EMPs. This projection is an extension of the canonical decomposition,[15] also known as the parallel factors (PARAFAC) decomposition.[16]

There are N sets of parameters to be solved, one in each mode. The solution to one set often depends on the other sets (except when N=1, the linear case). Therefore, the suboptimal iterative procedure in [17] is followed.

This is originated from the alternating least square method for multi-way data analysis.[18]